{"version":3,"sources":["../../../src/@ionic-native/plugins/date-picker/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,iBAAA,EAAmB,MAAA,EAAO,MAAO,oBAAA,CAAqB;AAuHxE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AASH;IAAgC,8BAAiB;IARjD;QAAA,qEAmCC;QA1BC;;WAEG;QACH,oBAAc,GAAG;YACf,iBAAiB,EAAE,CAAC;YACpB,eAAe,EAAE,CAAC;YAClB,gBAAgB,EAAE,CAAC;YACnB,yBAAyB,EAAE,CAAC;YAC5B,0BAA0B,EAAE,CAAC;SAC9B,CAAC;;IAiBJ,CAAC;IAfC;;;;OAIG;IAEH,yBAAI,GAAJ,UAAK,OAA0B;QAC7B,MAAM,CAAC;IACT,CAAC;IACI,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IARA;QADC,OAAO,EAAE;;;;0CAGT;IApBU,UAAU;QARtB,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,2BAA2B;YACnC,SAAS,EAAE,YAAY;YACvB,IAAI,EAAE,8DAA8D;YACpE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACzC,CAAC;OAEW,UAAU,CA2BtB;IAAD,iBAAC;CA3BD,AA2BC,CA3B+B,iBAAiB,GA2BhD;SA3BY,UAAU","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface DatePickerOptions {\n  /**\n   * The mode of the date picker\n   * Values: date | time | datetime\n   */\n  mode: string;\n\n  /**\n   * Selected date\n   */\n  date: Date | string | number;\n\n  /**\n   * Minimum date\n   * Default: empty String\n   */\n  minDate?: Date | string | number;\n\n  /**\n   * Maximum date\n   * Default: empty String\n   */\n  maxDate?: Date | string | number;\n\n  /**\n   * Label for the dialog title. If empty, uses android default (Set date/Set time).\n   * Default: empty String\n   */\n  titleText?: string;\n\n  /**\n   * Label of BUTTON_POSITIVE (done button) on Android\n   */\n  okText?: string;\n\n  /**\n   * Label of BUTTON_NEGATIVE (cancel button). If empty, uses android.R.string.cancel.\n   */\n  cancelText?: string;\n\n  /**\n   * Label of today button. If empty, doesn't show the option to select current date.\n   */\n  todayText?: string;\n\n  /**\n   * Label of now button. If empty, doesn't show the option to select current time.\n   */\n  nowText?: string;\n\n  /**\n   * Shows time dialog in 24 hours format.\n   */\n  is24Hour?: boolean;\n\n  /**\n   * Choose the Android theme for the picker. You can use the DatePicker.ANDROID_THEMES property.\n   * Values: 1: THEME_TRADITIONAL | 2: THEME_HOLO_DARK | 3: THEME_HOLO_LIGHT | 4: THEME_DEVICE_DEFAULT_DARK | 5: THEME_DEVICE_DEFAULT_LIGHT\n   */\n  androidTheme?: number;\n\n  /**\n   * Shows or hide dates earlier then selected date.\n   */\n  allowOldDates?: boolean;\n\n  /**\n   * Shows or hide dates after selected date.\n   */\n  allowFutureDates?: boolean;\n\n  /**\n   * Label of done button.\n   */\n  doneButtonLabel?: string;\n\n  /**\n   * Hex color of done button.\n   */\n  doneButtonColor?: string;\n\n  /**\n   * Label of cancel button.\n   */\n  cancelButtonLabel?: string;\n\n  /**\n   * Hex color of cancel button.\n   */\n  cancelButtonColor?: string;\n\n  /**\n   * X position of date picker. The position is absolute to the root view of the application.\n   */\n  x?: number;\n\n  /**\n   * Y position of date picker. The position is absolute to the root view of the application.\n   */\n  y?: number;\n\n  /**\n   * Interval between options in the minute section of the date picker.\n   */\n  minuteInterval?: number;\n\n  /**\n   * Force the UIPopoverArrowDirection enum. The value any will revert to default UIPopoverArrowDirectionAny and let the app choose the proper direction itself.\n   */\n  popoverArrowDirection?: string;\n\n  /**\n   * Force locale for datePicker.\n   */\n  locale?: string;\n}\n\n/**\n * @name Date Picker\n * @description\n * The DatePicker plugin allows the user to fetch date or time using native dialogs.\n *\n * @usage\n * ```typescript\n * import { DatePicker } from '@ionic-native/date-picker';\n *\n * constructor(private datePicker: DatePicker) { }\n *\n *\n * ...\n *\n *\n * this.datePicker.show({\n *   date: new Date(),\n *   mode: 'date',\n *   androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK\n * }).then(\n *   date => console.log('Got date: ', date),\n *   err => console.log('Error occurred while getting date: ', err)\n * );\n * ```\n * @interfaces\n * DatePickerOptions\n */\n@Plugin({\n  pluginName: 'DatePicker',\n  plugin: 'cordova-plugin-datepicker',\n  pluginRef: 'datePicker',\n  repo: 'https://github.com/VitaliiBlagodir/cordova-plugin-datepicker',\n  platforms: ['Android', 'iOS', 'Windows']\n})\n\nexport class DatePicker extends IonicNativePlugin {\n  /**\n   * @hidden\n   */\n  ANDROID_THEMES = {\n    THEME_TRADITIONAL: 1,\n    THEME_HOLO_DARK: 2,\n    THEME_HOLO_LIGHT: 3,\n    THEME_DEVICE_DEFAULT_DARK: 4,\n    THEME_DEVICE_DEFAULT_LIGHT: 5\n  };\n\n  /**\n   * Shows the date and/or time picker dialog(s)\n   * @param {DatePickerOptions} options Options for the date picker.\n   * @returns {Promise<Date>} Returns a promise that resolves with the picked date and/or time, or rejects with an error.\n   */\n  @Cordova()\n  show(options: DatePickerOptions): Promise<Date> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}